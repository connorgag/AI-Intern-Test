## InfluxDB Time Series Database

The InfluxDB database stores all time-series sensor data collected from the building. This includes temperature readings and occupancy states over time. It is good for queries about sensor data, measurements, and time-based analysis.

### Measurements:
- **temperature**: Stores temperature readings in Celsius from temperature sensors
- **occupancy**: Stores occupancy states (0=unoccupied, 1=occupied) from occupancy sensors

### Temperature Measurement:
- **Fields**: `celsius` (floating-point value representing temperature)
- **Tags**: 
  - `ac_unit`: The AC unit associated with the room
  - `room`: The room where the temperature is measured
  - `temp_sensor`: The specific sensor reporting the temperature

### Occupancy Measurement:
- **Fields**: `occupied` (binary value: 0=unoccupied, 1=occupied)
- **Tags**:
  - `ac_unit`: The AC unit associated with the room
  - `room`: The room where occupancy is detected
  - `occupancy_sensor`: The specific sensor reporting the occupancy
  - `room_type`: The type of room (e.g., "Dorm")

### Time Range:
- Data is available from 2025-03-23T10:30 to 2025-03-30T10:25
- Measurements are taken at 5-minute intervals

## Querying Guidelines

When answering questions, consider whether the information needed is:
1. **Structural** (relationships between rooms and equipment) → Use Neo4j
2. **Historical** (sensor readings over time) → Use InfluxDB
3. **Combined** (requires information from both databases) → Join data from both sources

#### InfluxDB (Flux) Query Examples:
- Get temperature readings for a specific room over the past day:
from(bucket: "bucket")
|> range(start: -1d)
|> filter(fn: (r) => r._measurement == "temperature" and r.room == "dorm1")
|> filter(fn: (r) => r._field == "celsius")
- Find highest temperature readings across all rooms:
from(bucket: "bucket")
|> range(start: -7d)
|> filter(fn: (r) => r._measurement == "temperature")
|> filter(fn: (r) => r._field == "celsius")
|> max()